{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-dev-hyd"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DF_sales')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DF_Neelima"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_src_sales_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_tgt_sales_csv",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          COUNTY as string,",
						"          HOSPITAL as string,",
						"          {COMMENT LETTERS} as string,",
						"          {ESOPHAGEAL RESECTION\\n(Risk-Adjusted Mortality Rate)} as string,",
						"          {ESOPHAGEAL RESECTION\\n(# of Deaths)} as string,",
						"          {ESOPHAGEAL RESECTION\\n(# of Cases)} as string,",
						"          {ESOPHAGEAL RESECTION\\n(Outlier Ratings)} as string,",
						"          {PANCREATIC RESECTION\\n(Risk-Adjusted Mortality Rate)} as string,",
						"          {PANCREATIC RESECTION\\n(# of Deaths)} as string,",
						"          {PANCREATIC RESECTION\\n(# of Cases)} as string,",
						"          {PANCREATIC RESECTION\\n(Outlier Ratings)} as string,",
						"          {AAA REPAIR\\n(Risk-Adjusted Mortality Rate)} as string,",
						"          {AAA REPAIR\\n(# of Deaths)} as string,",
						"          {AAA REPAIR\\n(# of Cases)} as string,",
						"          {AAA REPAIR    (Outlier Ratings)} as string,",
						"          {CRANIOTOMY\\n(Risk-Adjusted Mortality Rate)} as string,",
						"          {CRANIOTOMY\\n(# of Deaths)} as string,",
						"          {CRANIOTOMY\\n(# of Cases)} as string,",
						"          {CRANIOTOMY (Outlier Ratings)} as string,",
						"          {ACUTE MYOCARDIAL INFARCTION\\n(Risk-Adjusted Mortality Rate)} as string,",
						"          {ACUTE MYOCARDIAL INFARCTION\\n(# of Deaths)} as string,",
						"          {ACUTE MYOCARDIAL INFARCTION\\n(# of Cases)} as string,",
						"          {ACUTE MYOCARDIAL INFARCTION\\n(Outlier Ratings)} as string,",
						"          {HEART FAILURE\\n(Risk-Adjusted Mortality Rate)} as string,",
						"          {HEART FAILURE\\n(# of Deaths)} as string,",
						"          {HEART FAILURE\\n(# of Cases)} as string,",
						"          {HEART FAILURE\\n(Outlier Ratings)} as string,",
						"          {ACUTE STROKE\\n(Risk-Adjusted Mortality Rate)} as string,",
						"          {ACUTE STROKE\\n(# of Deaths)} as string,",
						"          {ACUTE STROKE\\n(# of Cases)} as string,",
						"          {ACUTE STROKE (Outlier Ratings)} as string,",
						"          {GI HEMORRHAGE (Risk-Adjusted Mortality Rate)} as string,",
						"          {GI HEMORRHAGE\\n(# of Deaths)} as string,",
						"          {GI HEMORRHAGE\\n(# of Cases)} as string,",
						"          {GI HEMORRHAGE (Outlier Ratings)} as string,",
						"          {HIP FRACTURE\\n(Risk-Adjusted Mortality Rate)} as string,",
						"          {HIP FRACTURE\\n(# of Deaths)} as string,",
						"          {HIP FRACTURE\\n(# of Cases)} as string,",
						"          {HIP FRACTURE (Outlier Ratings)} as string,",
						"          {PNEUMONIA\\n(Risk-Adjusted Mortality Rate)} as string,",
						"          {PNEUMONIA\\n(# of Deaths)} as string,",
						"          {PNEUMONIA\\n(# of Cases)} as string,",
						"          {PNEUMONIA (Outlier Ratings)} as string,",
						"          {PCI\\n(Risk-Adjusted Mortality Rate)} as string,",
						"          {PCI\\n(# of Deaths)} as string,",
						"          {PCI\\n(# of Cases)} as string,",
						"          {PCI\\n(Outlier Ratings)} as string,",
						"          {CAROTID ENDARTERECTOMY\\n(Risk-Adjusted Mortality Rate)} as string,",
						"          {CAROTID ENDARTERECTOMY\\n(# of Deaths)} as string,",
						"          {CAROTID ENDARTERECTOMY\\n(# of Cases)} as string,",
						"          {CAROTID ENDARTERECTOMY\\n(Outlier Ratings)} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_copy_file')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_copy_california_health_2010",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_copy_california_health_2010",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Srccaliforniahealth2010": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Venkat_PL"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-14T05:16:23Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pl_Org_csv_copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF_Org",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_Org",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Neelima_PL"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-14T05:40:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pl_bank_csv_org')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF_bank",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_bank",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Bankcsv": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Neelima_PL"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-14T07:03:48Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_sale_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF_sales",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_sales",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Neelima_PL"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_sales')]"
			]
		}
	]
}